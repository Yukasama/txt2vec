name: Main CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: "0 0 * * *"

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.x"]

    env:
      DATABASE_URL: sqlite+aiosqlite:///./app.db

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      # Install and cache dependencies
      - name: Install uv
        run: |
          echo "UV_LINK_MODE=copy" >> $GITHUB_ENV
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Cache uv dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: uv-${{ runner.os }}-${{ hashFiles('**/pyproject.toml', '**/uv.lock') }}

      - name: Install dependencies
        run: uv sync

      # Run Linter
      - name: Run lint with ruff
        uses: astral-sh/ruff-action@v3
        continue-on-error: true

      # Check for outdated packages
      - name: Check for outdated packages
        run: uv pip list --outdated > outdated-packages.txt
        continue-on-error: true

      - name: Upload outdated packages reports
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: outdated-report
          path: outdated-packages.txt
          retention-days: 14

      # Run tests
      - name: Run tests with pytest
        run: |
          mkdir -p data/uploads
          uv run pytest --github-actions

      # Upload reports
      - name: Upload test reports
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: pytest-report.html
          retention-days: 14
